--- |
  ; ModuleID = 'SecMult_wires_1_cm0.ll'
  target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
  target triple = "thumbv6m--"
  
  ; Function Attrs: nounwind
  define arm_aapcscc i32 @_Z7SecMultiiiii(i32 %a, i32 %b, i32 %a0, i32 %b0, i32 %r0_01) #0 {
    %1 = alloca i32, align 4
    %2 = alloca i32, align 4
    %3 = alloca i32, align 4
    %4 = alloca i32, align 4
    %5 = alloca i32, align 4
    %a1 = alloca i32, align 4
    %b1 = alloca i32, align 4
    %c0 = alloca i32, align 4
    %c1 = alloca i32, align 4
    %r0_10 = alloca i32, align 4
    %p0_01 = alloca i32, align 4
    %p0_10 = alloca i32, align 4
    %c0_1 = alloca i32, align 4
    %c1_1 = alloca i32, align 4
    %res = alloca i32, align 4
    store i32 %a, i32* %1, align 4
    store i32 %b, i32* %2, align 4
    store i32 %a0, i32* %3, align 4
    store i32 %b0, i32* %4, align 4
    store i32 %r0_01, i32* %5, align 4
    %6 = load i32, i32* %1, align 4
    %7 = load i32, i32* %3, align 4
    %8 = xor i32 %6, %7
    store i32 %8, i32* %a1, align 4
    %9 = load i32, i32* %2, align 4
    %10 = load i32, i32* %4, align 4
    %11 = xor i32 %9, %10
    store i32 %11, i32* %b1, align 4
    %12 = load i32, i32* %3, align 4
    %13 = load i32, i32* %b1, align 4
    %14 = mul nsw i32 %12, %13
    store i32 %14, i32* %p0_01, align 4
    %15 = load i32, i32* %5, align 4
    %16 = load i32, i32* %p0_01, align 4
    %17 = xor i32 %15, %16
    store i32 %17, i32* %r0_10, align 4
    %18 = load i32, i32* %a1, align 4
    %19 = load i32, i32* %4, align 4
    %20 = mul nsw i32 %18, %19
    store i32 %20, i32* %p0_10, align 4
    %21 = load i32, i32* %r0_10, align 4
    %22 = load i32, i32* %p0_10, align 4
    %23 = xor i32 %21, %22
    store i32 %23, i32* %r0_10, align 4
    %24 = load i32, i32* %3, align 4
    %25 = load i32, i32* %4, align 4
    %26 = mul nsw i32 %24, %25
    store i32 %26, i32* %c0, align 4
    %27 = load i32, i32* %c0, align 4
    %28 = load i32, i32* %5, align 4
    %29 = xor i32 %27, %28
    store i32 %29, i32* %c0_1, align 4
    %30 = load i32, i32* %a1, align 4
    %31 = load i32, i32* %b1, align 4
    %32 = mul nsw i32 %30, %31
    store i32 %32, i32* %c1, align 4
    %33 = load i32, i32* %c1, align 4
    %34 = load i32, i32* %r0_10, align 4
    %35 = xor i32 %33, %34
    store i32 %35, i32* %c1_1, align 4
    %36 = load i32, i32* %c0_1, align 4
    %37 = load i32, i32* %c1_1, align 4
    %38 = xor i32 %36, %37
    store i32 %38, i32* %res, align 4
    %39 = load i32, i32* %res, align 4
    ret i32 %39
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0" "target-features"="+soft-float,+strict-align,-crypto,-neon" "unsafe-fp-math"="false" "use-soft-float"="true" }
  
  !llvm.module.flags = !{!0, !1}
  !llvm.ident = !{!2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{i32 1, !"min_enum_size", i32 4}
  !2 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}

...
---
name:            _Z7SecMultiiiii
alignment:       1
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: tgpr }
  - { id: 1, class: tgpr }
  - { id: 2, class: tgpr }
  - { id: 3, class: tgpr }
  - { id: 4, class: tgpr }
  - { id: 5, class: tgpr }
  - { id: 6, class: tgpr }
  - { id: 7, class: tgpr }
  - { id: 8, class: tgpr }
  - { id: 9, class: tgpr }
  - { id: 10, class: tgpr }
  - { id: 11, class: tgpr }
  - { id: 12, class: tgpr }
  - { id: 13, class: tgpr }
  - { id: 14, class: tgpr }
  - { id: 15, class: tgpr }
  - { id: 16, class: tgpr }
  - { id: 17, class: tgpr }
  - { id: 18, class: tgpr }
  - { id: 19, class: tgpr }
  - { id: 20, class: tgpr }
  - { id: 21, class: tgpr }
  - { id: 22, class: tgpr }
  - { id: 23, class: tgpr }
  - { id: 24, class: tgpr }
  - { id: 25, class: tgpr }
  - { id: 26, class: tgpr }
  - { id: 27, class: tgpr }
  - { id: 28, class: tgpr }
  - { id: 29, class: tgpr }
  - { id: 30, class: tgpr }
  - { id: 31, class: tgpr }
liveins:         
  - { reg: '%r0', virtual-reg: '%0' }
  - { reg: '%r1', virtual-reg: '%1' }
  - { reg: '%r2', virtual-reg: '%2' }
  - { reg: '%r3', virtual-reg: '%3' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
fixedStack:      
  - { id: 0, offset: 0, size: 4, alignment: 8, isImmutable: true, isAliased: false }
stack:           
  - { id: 0, name: '<unnamed alloca>', offset: 0, size: 4, alignment: 4, 
      local-offset: -4 }
  - { id: 1, name: '<unnamed alloca>', offset: 0, size: 4, alignment: 4, 
      local-offset: -8 }
  - { id: 2, name: '<unnamed alloca>', offset: 0, size: 4, alignment: 4, 
      local-offset: -12 }
  - { id: 3, name: '<unnamed alloca>', offset: 0, size: 4, alignment: 4, 
      local-offset: -16 }
  - { id: 4, name: '<unnamed alloca>', offset: 0, size: 4, alignment: 4, 
      local-offset: -20 }
  - { id: 5, name: a1, offset: 0, size: 4, alignment: 4, local-offset: -24 }
  - { id: 6, name: b1, offset: 0, size: 4, alignment: 4, local-offset: -28 }
  - { id: 7, name: c0, offset: 0, size: 4, alignment: 4, local-offset: -32 }
  - { id: 8, name: c1, offset: 0, size: 4, alignment: 4, local-offset: -36 }
  - { id: 9, name: r0_10, offset: 0, size: 4, alignment: 4, local-offset: -40 }
  - { id: 10, name: p0_01, offset: 0, size: 4, alignment: 4, local-offset: -44 }
  - { id: 11, name: p0_10, offset: 0, size: 4, alignment: 4, local-offset: -48 }
  - { id: 12, name: c0_1, offset: 0, size: 4, alignment: 4, local-offset: -52 }
  - { id: 13, name: c1_1, offset: 0, size: 4, alignment: 4, local-offset: -56 }
  - { id: 14, name: res, offset: 0, size: 4, alignment: 4, local-offset: -60 }
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %r0, %r1, %r2, %r3
    liveouts: %r0
  
    %3 = COPY %r3
    %2 = COPY %r2
    %1 = COPY %r1
    %0 = COPY %r0
    tSTRspi %0, %stack.0.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1)
    tSTRspi %1, %stack.1.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2)
    tSTRspi %2, %stack.2.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.3)
    tSTRspi %3, %stack.3.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.4)
    %4 = tLDRspi %fixed-stack.0, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from stack, align 8)
    tSTRspi killed %4, %stack.4.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.5)
    %5 = tLDRspi %stack.2.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.3)
    %6 = tLDRspi %stack.0.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1)
    %7, %cpsr = tEOR %6, killed %5, 14, _
    tSTRspi killed %7, %stack.5.a1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.a1)
    %8 = tLDRspi %stack.3.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.4)
    %9 = tLDRspi %stack.1.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.2)
    %10, %cpsr = tEOR %9, killed %8, 14, _
    tSTRspi %10, %stack.6.b1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.b1)
    %11 = tLDRspi %stack.2.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.3)
    %12, %cpsr = tMUL killed %11, %10, 14, _
    tSTRspi %12, %stack.10.p0_01, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.p0_01)
    %13 = tLDRspi %stack.4.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.5)
    %14, %cpsr = tEOR %13, %12, 14, _
    tSTRspi killed %14, %stack.9.r0_10, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.r0_10)
    %15 = tLDRspi %stack.3.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.4)
    %16 = tLDRspi %stack.5.a1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.a1)
    %17, %cpsr = tMUL killed %16, %15, 14, _
    tSTRspi %17, %stack.11.p0_10, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.p0_10)
    %18 = tLDRspi %stack.9.r0_10, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.r0_10)
    %19, %cpsr = tEOR %18, %17, 14, _
    tSTRspi killed %19, %stack.9.r0_10, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.r0_10)
    %20 = tLDRspi %stack.3.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.4)
    %21 = tLDRspi %stack.2.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.3)
    %22, %cpsr = tMUL killed %21, %20, 14, _
    tSTRspi %22, %stack.7.c0, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.c0)
    %23 = tLDRspi %stack.4.<unnamed alloca>, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.5)
    %24, %cpsr = tEOR %22, killed %23, 14, _
    tSTRspi killed %24, %stack.12.c0_1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.c0_1)
    %25 = tLDRspi %stack.6.b1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.b1)
    %26 = tLDRspi %stack.5.a1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.a1)
    %27, %cpsr = tMUL killed %26, %25, 14, _
    tSTRspi %27, %stack.8.c1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.c1)
    %28 = tLDRspi %stack.9.r0_10, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.r0_10)
    %29, %cpsr = tEOR %27, killed %28, 14, _
    tSTRspi %29, %stack.13.c1_1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.c1_1)
    %30 = tLDRspi %stack.12.c0_1, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.c0_1)
    %31, %cpsr = tEOR %30, %29, 14, _
    tSTRspi %31, %stack.14.res, 0, 14, _, <0x3510750> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.res)
    %r0 = COPY %31
    tBX_RET 14, _, implicit %r0

...
